// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum DockerStatus {
  up
  down
  stopped
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  name        String
  username    String
  provider    String
  providerId  String
  accessToken String
  repos       Repo[]
  role        Role     @default(USER)
  balance     Float?   @default(25) // 25 USD Welcome bonus
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([email, provider])
}

model Repo {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  url         String       @unique
  user        User         @relation(fields: [userId], references: [id])
  userId      String       @db.ObjectId
  dockerImage DockerImage?
  event       String?
  env         String?
  nodeVersion String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model DockerImage {
  id         String      @id @map("_id")
  repo       Repo        @relation(fields: [repoId], references: [id])
  repoId     String      @unique @db.ObjectId
  Containers Container[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Container {
  id            String       @id @map("_id")
  dockerImage   DockerImage  @relation(fields: [dockerImageId], references: [id])
  dockerImageId String
  port          String
  ip            String
  tier          Tier         @relation(fields: [tierId], references: [id])
  tierId        String       @db.ObjectId
  status        DockerStatus
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Tier {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Float
  cpu       String
  memory    String
  Container Container[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
